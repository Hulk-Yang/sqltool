<?xml version="1.0" encoding="UTF-8" ?>
<!--F.1字符函数——返回字符值这些函数全都接收的是字符族类型的参数(CHR除外)并且返回字符值.除了特别说明的之外,这些函数大部分返回VARCHAR2类型的数值.
	字符函数的返回类型所受的限制和基本数据库类型所受的限制是相同的,比如:VARCHAR2数值被限制为2000字符(ORACLE8中为4000字符),
	而CHAR数值被限制为255字符(在ORACLE8中是2000).当在过程性语句中使用时,它们可以被赋值给VARCHAR2或者CHAR类型的PL/SQL变量.-->
<interfunction>
	<prompt>
		<name>ASCII</name>
		<grammar>ascii(charc)</grammar>
		<function>返回一个字符串的第一个字符的ASCII码，他的逆函数是CHR()</function>
	</prompt>
	<prompt>
		<name>CHR</name>
		<grammar>chr(x)</grammar>
		<function>返回在数据库字符集中与X拥有等价数值的字符。CHR和ASCII是一对反函数。经过CHR转换后的字符再经过ASCII转换又得到了原来的字符。
		</function>
	</prompt>
	<prompt>
		<name>CONCAT</name>
		<grammar>CONCAT（c1,c2）</grammar>
		<function>
			c1,c2均为字符串，函数将c2连接到c1的后面，如果c1为null,将返回c2.如果c2为null,则返回c1，如果c1、c2都为null，则返回null,他和操作符||返回的结果相同.
		</function>
	</prompt>
	<prompt>
		<name>INITCAP</name>
		<grammar>INITCAP（string）</grammar>
		<function>返回字符串的每个单词的第一个字母大写而单词中的其他字母小写的string。单词是用.空格或给字母数字字符由空格，控制字符，标点符号进行分隔。不是字母的字符不变动。
		</function>
	</prompt>
	selectINITCAP('luo,jia,you')fromdual;
	selectINITCAP('luojia
	you')fromdual;
	<prompt>
		<name>LTRIM</name>
		<grammar>LTRIM（string1,string2）</grammar>
		<function>返回删除从左边算起出现在string2中的字符的string1。String2被缺省设置为单个的空格。数据库将扫描string1，从最左边开始。当遇到不在string2中的第一个字符，结果就被返回了。LTRIM的行为方式与RTRIM很相似。
		</function>
	</prompt>
	<prompt>
		<name>LOWER</name>
		<grammar>LOWER(string)</grammar>
		<function>返回字符串,并将所有的字符小写</function>
	</prompt>
	<prompt>
		<name>NLS_INITCAP</name>
		<grammar>NLS_INITCAP（string[,nlsparams]）</grammar>
		<function>返回字符串每个单词第一个字母大写而单词中的其他字母小写的string，nlsparams
			指定了不同于该会话缺省值的不同排序序列。如果不指定参数，则功能和INITCAP相同。Nlsparams可以使用的形式是：
			‘NLS_SORT=sort’
			这里sort制订了一个语言排序序列。
					</function>
	</prompt>
	<prompt>
		<name>NLS_LOWER</name>
		<grammar>NLS_LOWER（string[,nlsparams]）</grammar>
		<function>
			返回字符串中的所有字母都是小写形式的string。不是字母的字符不变。
			Nlsparams参数的形式与用途和NLS_INITCAP中的nlsparams参数是相同的。如果nlsparams没有被包含，那么NLS_LOWER所作的处理和LOWER相同。
			使用位置；过程性语句和SQL语句。
		</function>
	</prompt>
	<prompt>
		<name>NLS_UPPER</name>
		<grammar>nls_upper（string[,nlsparams]）</grammar>
		<function>返回字符串中的所有字母都是大写的形式的string。不是字母的字符不变。nlsparams参数的形式与用途和NLS_INITCAP中的相同。如果没有设定参数，则NLS_UPPER功能和UPPER相同。
		</function>
	</prompt>
	<prompt>
		<name>REPLACE</name>

		<grammar>REPLACE（string，search_str[,replace_str]）
														</grammar>
		<function>把string中的所有的子字符串search_str用可选的replace_str替换，如果没有指定replace_str，所有的string中的子字符串search_str都将被删除。REPLACE是TRANSLATE所提供的功能的一个子集。
		</function>
	</prompt>
	<prompt>
		<name>RPAD</name>
		<grammar>RPAD（string1,x[,string2]）</grammar>
		<function>返回在X字符长度的位置上插入一个string2中的字符的string1。如果string2的长度要比X字符少，就按照需要进行复制。如果string2多于X字符，则仅string1前面的X各字符被使用。如果没有指定string2，那么使用空格进行填充。X是使用显示长度可以比字符串的实际长度要长。RPAD的行为方式与LPAD很相似，除了它是在右边而不是在左边进行填充。
		</function>
	</prompt>
	<prompt>
		<name>LPAD</name>
		<grammar>LPAD（string1,x[,string2]）</grammar>
		<function>返回在X字符长度的位置上插入一个string2中的字符的string1。如果string2的长度要比X字符少，就按照需要进行复制。如果string2多于X字符，则仅string1前面的X各字符被使用。如果没有指定string2，那么使用空格进行填充。X是使用显示长度可以比字符串的实际长度要长。RPAD的行为方式与LPAD很相似，除了它是在右边而不是在左边进行填充。
			String1,string2均为字符串，x为整数。在string1的左侧用string2字符串补足致长度x,可多次重复，如果x小于string1的长度，那么只返回string1中左侧x个字符长的字符串，其他的将被截去。String2的缺省值为单空格
		</function>
	</prompt>
	<prompt>
		<name>RTRIM</name>
		<grammar>RTRIM（string1,[,string2]）</grammar>
		<function>返回删除从右边算起出现在string1中出现的字符string2.
			string2被缺省设置为单个的空格.数据库将扫描string1,从右边开始.当遇到不在string2中的第一个字符,结果就被返回了RTRIM的行为方式与LTRIM很相似.
		</function>
	</prompt>
	<prompt>
		<name>SOUNDEX</name>
		<grammar>SOUNDEX（string）</grammar>
		<function>返回string的声音表示形式.这对于比较两个拼写不同但是发音类似的单词而言很有帮助.
			返回与string发音相似的词
		</function>
	</prompt>
	<prompt>
		<name>SUBSTR</name>
		<grammar>SUBSTR（string,a[,b]）</grammar>
		<function>返回从字母为值a开始b个字符长的string的一个子字符串.如果a是0,那么它就被认为从第一个字符开始.如果是正数,返回字符是从左边向右边进行计算的.如果b是负数,那么返回的字符是从string的末尾开始从右向左进行计算的.如果b不存在,那么它将缺省的设置为整个字符串.如果b小于1,那么将返回NULL.如果a或b使用了浮点数,那么该数值将在处理进行以前首先被却为一个整数.
		</function>
	</prompt>
	<prompt>
		<name>SUBSTRB</name>
		<grammar>SUBSTRB（string,a[,b]）</grammar>
		<function>与SUBSTR大致相同，只是a,b是以字节计算</function>
	</prompt>
	<prompt>
		<name>TRANSLATE</name>
		<grammar>TRANSLATE(string,from_str,to_str)</grammar>
		<function>返回将所出现的from_str中的每个字符替换为to_str中的相应字符以后的string.
			TRANSLATE是REPLACE所提供的功能的一个超集.如果from_str比to_str长,那么在from_str中而不在to_str中而外的字符将从string中被删除,因为它们没有相应的替换字符.
			to_str不能为空.Oracle把空字符串认为是NULL,并且如果TRANSLATE中的任何参数为NULL,那么结果也是NULL.
		</function>
	</prompt>
	<prompt>
		<name>TRIM</name>
		<grammar>TRIM(string)</grammar>
		<function>删除string字符串前后的空格</function>
	</prompt>
	<prompt>
		<name>UPPER</name>
		<grammar>UPPER（string）</grammar>
		<function>返回大写的string.不是字母的字符不变.如果string是CHAR数据类型的,那么结果也是CHAR类型的.如果string是VARCHAR2类型的,那么结果也是VARCHAR2类型的.
		</function>
	</prompt>
	<prompt>
		<name>ASCII</name>
		<grammar>ASCII（string）</grammar>
		<function>数据库字符集返回string的第一个字节的十进制表示.请注意该函数仍然称作为ASCII.尽管许多字符集不是7位ASCII.CHR和ASCII是互为相反的函数.CHR得到给定字符编码的响应字符.
			ASCII得到给定字符的字符编码.
				</function>
	</prompt>
	<prompt>
		<name>INSTR</name>
		<grammar>INSTR（string1,string2[a,b]）</grammar>
		<function>得到在string1中包含string2的位置.
			string1时从左边开始检查的,开始的位置为a,如果a是一个负数,那么string1是从右边开始进行扫描的.第b次出现的位置将被返回.
			a和b都缺省设置为1,这将会返回在string1中第一次出现string2的位置.如果string2在a和b的规定下没有找到,那么返回0.位置的计算是相对于string1的开始位置的,不管a和b的取值是多少.
		</function>
	</prompt>
	<prompt>
		<name>INSTRB</name>
		<grammar>INSTRB（string1,string2[a,[b]]）</grammar>
		<function>和INSTR相同,只是操作的对参数字符使用的位置的是字节.</function>
	</prompt>
	<prompt>
		<name>LENGTH</name>
		<grammar>LENGTH（string）</grammar>
		<function>返回string的字节单位的长度.CHAR数值是填充空格类型的,如果string由数据类型CHAR,它的结尾的空格都被计算到字符串长度中间.如果string是NULL,返回结果是NULL,而不是0.
		</function>
	</prompt>
	<prompt>
		<name>LENGTHB</name>
		<grammar>LENGTHB（string）</grammar>
		<function>返回以字节为单位的string的长度.对于单字节字符集LENGTHB和LENGTH是一样的.</function>
	</prompt>
	<prompt>
		<name>NLSSORT</name>
		<grammar>NLSSORT（string[,nlsparams])</grammar>
		<function>得到用于排序string的字符串字节.所有的数值都被转换为字节字符串,这样在不同数据库之间就保持了一致性.
			Nlsparams的作用和NLS_INITCAP中的相同.如果忽略参数,会话使用缺省排序.
																						</function>
	</prompt>
	<prompt>
		<name>ABS</name>
		<grammar>ABS(x)</grammar>
		<function>得到x的绝对值.使用位置:过程性语言和SQL语句。</function>
	</prompt>
	<prompt>
		<name>ACOS</name>
		<grammar>ACOS(x)</grammar>
		<function>
			返回x的反余弦值.
			x应该从0到1之间的数,结果在0到pi之间,以弧度为单位.
			使用位置:过程性语言和SQL语句。
		</function>
	</prompt>
	<prompt>
		<name>ASIN</name>
		<grammar>ASIN(x)</grammar>
		<function>
			计算x的反正弦值.
			X的范围应该是－1到1之间,返回的结果在－pi/2到pi/2之间,以弧度为单位.
			使用位置:
			过程性语言和SQL语句。</function>
	</prompt>
	<prompt>
		<name>ATAN</name>
		<grammar>ATAN(x)</grammar>
		<function>
			计算x的反正切值.返回值在－pi/2到pi/2之间,单位是弧度.
			使用位置:过程性语言和SQL语句。
		</function>
	</prompt>
	<prompt>
		<name>ATAN2</name>
		<grammar>ATAN2(x,y)</grammar>
		<function>
			计算x和y的反正切值.结果在负的pi/2到正的pi/2之间,单位是弧度.
			使用位置:过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>CEIL</name>
		<grammar>CEIL(x)</grammar>
		<function>
			计算大于或等于x的最小整数值.
			使用位置:过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>COS</name>
		<grammar>COS(x)</grammar>
		<function>
			返回x的余弦值.X的单位是弧度.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>COSH</name>
		<grammar>COSH(x)</grammar>
		<function>
			计算x的双曲余弦值.
				</function>
	</prompt>
	<prompt>
		<name>EXP</name>
		<grammar>EXP(x)</grammar>
		<function>
			计算e的x次幂.
			e为自然对数,约等于2.71828.
			使用位置:
			过程性语言和SQL语句。

					</function>
	</prompt>
	<prompt>
		<name>FLOOR</name>
		<grammar>FLOOR(x)</grammar>
		<function>
			返回小于等于x的最大整数值.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>LN</name>
		<grammar>LN(x)</grammar>
		<function>
			返回x的自然对数.
			x必须是正数,并且大于0
			使用位置:
				</function>
		过程性语言和SQL语句。
	</prompt>
	<prompt>
		<name>LOG</name>
		<grammar>LOG(x,y)</grammar>
		<function>
			计算以x为底的y的对数
			.x必须大于0而且不等于1,
			y为任意正数.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>MOD</name>
		<grammar>MOD(x,y)</grammar>
		<function>
			返回x除以y的余数.如果y是0,则返回x
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>POWER</name>
		<grammar>POWER(x,y)</grammar>
		<function>
			计算x的y次幂.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>ROUND</name>
		<grammar>ROUND(x[,y])</grammar>
		<function>
			计算保留到小数点右边y位的x值.
			y缺省设置为0,这会将x保留为最接近的整数.如果y小于0,保留到小数点左边相应的位.
			Y必须是整数.进行四舍五入。
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>SIGN</name>
		<grammar>SIGN(x)</grammar>
		<function>
		获得x的符号位标志.如果x小于0返回－1.如果x=0返回0.如果x大于0返回1.
			使用位置:
			过程性语言和SQL语句。
		</function>
	</prompt>
	<prompt>
		<name>SIN</name>
		<grammar>SIN(x)</grammar>
		<function>
			功能:计算x的正弦值.
			X是一个以弧度表示的角度.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>SINH</name>
		<grammar>SINH(x)</grammar>
		<function>
			功能:返回x的双曲正弦值.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>SQRT</name>
		<grammar>SQRT(x)</grammar>
		<function>
			返回x的平方根.
			x必须是正数.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>TAN</name>
		<grammar>TAN(x)</grammar>
		<function>
			计算x的正切值,
			x是一个以弧度位单位的角度.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>TANH</name>
		<grammar>TANH(x)</grammar>
		<function>
			计算x的双曲正切值.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>TRUNC</name>
		<grammar>TRUNC(x[,y])</grammar>
		<function>
			计算截尾到y位小数的x值.
			y缺省为0,结果变为一个整数值.如果y是一个负数,那么就截尾到小数点左边对应的位上.
			只是该函数不对指定小数前或后的部分做相应舍入选择处理，而统统截去。
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>ADD_MONTHS</name>
		<grammar>ADD_MONTHS(d,x)</grammar>
		<function>
			返回日期d加上x个月后的月份。x可以是任意整数。如果结果日期中的月份所包含的天数比d日期中的“日”分量要少。（即相加后的结果日期中的日分量信息已经超过该月的最后一天，例如，8月31日加上一个月之后得到9月31日，而9月只能有30天）返回结果月份的最后一天。
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>LAST_DAY</name>
		<grammar>LAST_DAY(d)</grammar>
		<function>
			功能:计算包含日期的d的月份最后一天的日期.这个函数可以用来计算当月中剩余天数.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>MONTHS_BETWEEN</name>
		<grammar>MONTHS_BETWEEN(date1,date2)</grammar>
		<function>
			计算date
			1和date2之间月数.如果date
			1,date2这两个日期中日分量信息是相同的,或者这两个日期都分别是所在月的最后一天,那么返回的结果是一个整数,否则包括一个小数,小数为富余天数除以31.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>NEW_TIME</name>
		<grammar>NEW_TIME(d,zone1,zone2)</grammar>
		<function>
			计算当时区zone1中的日期和时间是s时候,返回时区zone2中的日期和时间.
			zone1和zone2是字符串.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>NEXT_DAY</name>
		<grammar>NEXT_DAY(d,string)</grammar>
		<function>
			计算在日期d后满足由string给出的条件的第一天.
			String使用位置;当前会话的语言指定了一周中的某一天.返回值的时间分量与d的时间分量是相同的.
			String的内容可以忽略大小写.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>ROUND</name>
		<grammar>ROUND(d[,format])</grammar>
		<function>
			将日期d按照由format指定的格式进行处理.如果没有给format则使用缺省设置`DD`.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>SYSDATE</name>
		<grammar>SYSDATE</grammar>
		<function>
			取得当前的日期和时间,类型是DATE.它没有参数.但在分布式SQL语句中使用时,SYSDATE返回本地数据库的日期和时间.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>TRUNC</name>
		<grammar>TRUNC(d,format)</grammar>
		<function>
			计算截尾到由format指定单位的日期d.可以使用位置:格式和效果.缺省参数同ROUNG.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>CHARTOROWID</name>
		<grammar>CHARTOROWID(string)</grammar>
		<function>
			把包含外部格式的ROWID的CHAR或VARCHAR2数值转换为内部的二进制格式.参数string必须是包含外部格式的ROWID的18字符的字符串.oracle7和
			oracle8中的外部格式是不同的.CHARTOROWID是ROWIDTOCHAR的反函数.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>CONVERT</name>
		<grammar>CONVERT(string,dest_set[,source_set])</grammar>
		<function>
			将字符串string从source_set所表示的字符集转换为由dest_set所表示的字符集.如果source_set没有被指定,它缺省的被设置为数据库的字符集.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>HEXTORAW</name>
		<grammar>HEXTORAW(string)</grammar>
		<function>
			将由string表示的二进制数值转换为一个RAW数值.
			String应该包含一个十六进制的数值.
			String中的每两个字符表示了结果RAW中的一个字节..HEXTORAW和RAWTOHEX为相反的两个函数.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>RAWTOHEX</name>
		<grammar>RAWTOHEX(rawvalue)</grammar>
		<function>
			将RAW类数值rawvalue转换为一个相应的十六进制表示的字符串.
			rawvalue中的每个字节都被转换为一个双字节的字符串.
			RAWTOHEX和HEXTORAW是两个相反的函数.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>ROWIDTOCHAR</name>
		<grammar>ROWIDTOCHAR(rowid)</grammar>
		<function>
			将ROWID类型的数值rowid转换为其外部的18字符的字符串表示,在oracle7和oracle8之间有些不一样的地方.
			ROWIDTOCHAR和CHARTOROWID是两个相反的函数.
			使用位置:
			过程性语言和SQL语句。
				</function>

	</prompt>
	<prompt>
		<name>TO_CHAR</name>
		<grammar>TO_CHAR(num[,format[,nlsparams]])</grammar>
		<function>
			将NUMBER类型的参数num转换为一个VARCHAR2类型的变量.如果指定了format,那么它会控制这个转换处理.表5-5列除了可以使用的数字格式.如果没有指定format,它会控制这个转换过程.下面列出了可以使用的数字格式.如果没有指定format,那么结果字符串将包含和num中有效位的个数相同的字符.
			nlsparams用来指定小数点和千分位分隔符和货币符号.可以使用的格式:
			`NLS_NUMERIC_CHARS=”dg”NLS_CURRENCY=”string”

			d和g分别表示列小数点和千分位分隔符.
			String表示了货币的符号.例如,在美国小数点分隔符通常是一个句点(.),分组分隔符通常是一个逗号(,),而千分位符号通常是一个$.
			使用位置:
			过程性语言和SQL语句。
				</function>

	</prompt>
	<prompt>
		<name>TO_DATE</name>
		<grammar>TO_DATE(String[,format[,nlsparams]])</grammar>
		<function>
			把CHAR或者VARCHAR2类型的String转换为一个DATE类型的变量.
			format是一个日期格式字符串.当不指定format的时候,使用该会话的缺省日期格式.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>TO-_LABEL</name>
		<grammar>TO_LABEL(String[,format])</grammar>
		<function>
			将String转换为一个MLSLABEL类型的变量.
			String可以是VARCHAR2或者CHAR类型的参数.如果指定了format,那么它就会被用在转换中.如果没有指定format,那么使用缺省的转换格式.
			使用位置:
			过程性语言和SQL语句。
					</function>
	</prompt>
	<prompt>
		<name>TO_MULTI_BYTE</name>
		<grammar>TO_MULTI_BYTE(String)</grammar>
		<function>
			计算所有单字节字符都替位换位等价的多字节字符的String.该函数只有当数据库字符集同时包含多字节和单字节的字符的时候有效.否则,
			String不会进行任何处理.
			TO_MULTI_BYTE和TO_SINGLE_BYTE是相反的两个函数.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>TO_NUMBER</name>
		<grammar>TO_NUMBER(String[,format[,nlsparams]])</grammar>
		<function>
			将CHAR或者VARCHAR2类型的String转换为一个NUMBER类型的数值.如果指定了format,那么String应该遵循相应的数字格式.
			Nlsparams的行为方式和TO_CHAR中的完全相同.TO_NUMBER和TO_CHAR是两个相反的函数.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>TO_SINGLE_BYTE</name>
		<grammar>TO_SINGLE_BYTE(String)</grammar>
		<function>
			计算String中所有多字节字符都替换为等价的单字节字符.该函数只有当数据库字符集同时包含多字节和单字节的字符的时候有效.否则,
			String不会进行任何处理.
			TO_MULTI_BYTE和TO_SINGLE_BYTE是相反的两个函数.
			使用位置:
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>AVG</name>
		<grammar>AVG([DISTINCT|ALL]col)</grammar>
		<function>
			返回一列数据的平均值.
			使用位置:
			查询列表和GROUP
			BY子句.
				</function>
	</prompt>
	<prompt>
		<name>COUNT</name>
		<grammar>COUNT(*|[DISTINCT|ALL]col)</grammar>
		<function>
			得到查询中行的数目.如果使用了*获得行的总数.如果在参数中传递的是选择列表,那么计算的是非空数值.
				</function>
		<prompt>
		</prompt>
		<name>GLB</name>
		<grammar>GLB([DISTINCT|ALL]label)</grammar>
		<function>
			获得由label界定的最大下界.函数仅用于trusted
			oracle.
			使用位置:trusted数据库的选择列表和GROUP
			BY子句.
					</function>
	</prompt>
	<prompt>
		<name>LUB</name>
		<grammar>LUB([DISTINCT|ALL]label)</grammar>
		<function>
			获得由label界定的最小上界.用于trusted
			oracle.数据库.
			使用位置:
			trusted数据库的选择列表和GROUP
			BY子句.
			过程性语言和SQL语句。
				</function>
	</prompt>
	<prompt>
		<name>MAX</name>
		<grammar>MAX([DISTINCT|ALL]col)</grammar>
		<function>
			获得选择列表项目的最大值.
			使用位置:
			仅用于查询选择和GROUP
			BY子句.
					</function>
	</prompt>
	<prompt>
		<name>MIN</name>
		<grammar>MIN([DISTINCT|ALL]col)</grammar>
		<function>
			获得选择列表的最小值.
			使用位置:
			仅用于查询选择和GROUP
			BY子句.
					</function>
	</prompt>
	<prompt>
		<name>STDDEV</name>
		<grammar>STDDEV([DISTINCT|ALL]col)</grammar>
		<function>
			获得选择列表的标准差.标准差为方差的平方根.
			使用位置:
			仅用于查询选择和GROUP
			BY子句.
					</function>
	</prompt>
	<prompt>
		<name>SUM</name>
		<grammar>SUM([DISTINCT|ALL]col)</grammar>
		功能:返回选择的数值和总和
		使用位置:
		仅用于查询选择和GROUP
		BY子句.
	</prompt>
	<prompt>
		<name>VARIANCE</name>
		<grammar>VARIANCE([DISTINCT|ALL]col)</grammar>
		<function>
			功能:返回选择列表项目的统计方差.
			使用位置:
			仅用于查询选择和GROUP
			BY子句.
			F.7其
			他
			函
			数
						</function>
	</prompt>
	<prompt>
		<name>BFILENAME</name>
		<grammar>BFILENAME(directory,file_name)</grammar>
		<function>
			获得操作系统中与物理文件file_name相关的BFILE位置指示符.
			directory必须是数据字典中的DIRECTORY类型的对象.
			使用位置:
			过程性语言和SQL语句。
			</function>
	</prompt>
	<prompt>
		<name>DECODE</name>
		<grammar>DECODE(base_expr,comparel,valuel,Compare2,value2,default)
		</grammar>
		<function>
			把base_expr与后面的每个compare
			(n)
			进行比较,如果匹配返回相应的value
			(n)
			.如果没有发生匹配,则返回default
			使用位置:
			过程性语言和SQL语句。
			</function>
	</prompt>
	<prompt>
		<name>DUMP</name>
		<grammar>DUMP(expr[,number_format[,start_position][,length]])
		</grammar>
		<function>
			功能:获得有关expr的内部表示信息的VARCHAR2类型的数值.
			number_format指定了按照下面返回数值的基数(base):
			number_format
			结果
			8
			八进制表示
			10
			十进制表示
			16
			十六进制表示
			17
			单字符
			默认的值是十进制.
			如果指定了start_position和length,那么返回从start_position开始的长为length的字节.缺省返回全部.
			数据类型按照下面规定的内部数据类型的编码作为一个数字进行返回.
			代码
			数据类型
			1
			VARCHAR2
			2
			NUMBER
			8
			LONG
			12
			DATE
			23
			RAW
			69
			ROWID
			96
			CHAR
			106
			MLSLABEL
			使用位置:
			SQL语句.
				</function>
	</prompt>



	<prompt>
		<name>EMPTY_CLOB/EMPTY_BLOB</name>
		<grammar>EMPTY_CLOB</grammar>
		<function>
			获得一个空的LOB提示符
			(locator)
			.EMOTY_CLOB返回一个字符指示符,而
			EMPTY_BLOB返回一个二进制指示符.
			使用位置:
			过程性语言和SQL语句.
				</function>
	</prompt>

	<prompt>
		<name>GREATEST</name>
		<grammar>GREATEST(expr1[,expr2]…)</grammar>
		<function>
			计算参数中最大的表达式.所有表达式的比较类型以expr1为准.
			返回一组表达式中的最大值,即比较字符的编码大小.
			使用位置:
			过程性语言和SQL语句.
							</function>
	</prompt>
	<prompt>
		<name>GREATEST_LB</name>
		<grammar>GREATEST_LB(label1[,label2]…)</grammar>
		<function>
			返回标签(label)列表中最大的下界.每个标签必须拥有数据类型MLSLABEL、RAWMLSLABEL或者是一个表因字符串文字.函数只能用于truested
			oracle库.
			使用位置:
			过程性语言和SQL语句.
		</function>
	</prompt>
	<prompt>
		<name>LEAST</name>
		<grammar>LEAST(expr1[,:expr2]…)</grammar>
		<function>
			获得参数中最小的表达式.
			使用位置:
			过程性语言和SQL语句.
			</function>
	</prompt>
	<prompt>
		<name>LEAST_UB</name>
		<grammar>LEAST_UB(label1[,label2]…)</grammar>
		<function>
			与GREATEST_UB函数相似,本函数返回标签列表的最小上界.
			使用位置:
			过程性语言和SQL语句.
				</function>
	</prompt>
	<prompt>
		<name>NVL</name>
		<grammar>NVL(expr1,expr2)</grammar>
		<function>
			如果expr1是NULL,那么返回expr2,否则返回expr1.
			如果expr1不是字符串,那么返回值的数据类型和expr1是相同的,否则,返回值的数据类型是VARCHAR2.此函数对于检查并确定查询的活动集不包含NULL值十分有用.
			使用位置:
			过程性语言和SQL语句.
				</function>
	</prompt>
	<prompt>
		<name>UID</name>
		<grammar/>
		<function>
			获得当前数据库用的惟一标识,标识是一个整数.
			使用位置:
			过程性语言和SQL语句.
							</function>
	</prompt>
	<prompt>
		<name>USER</name>
		<grammar/>
		<function>
			取得当前oracle用户的名字,返回的结果是一个VARCHAR2型字符串.
			使用位置:
			过程性语言和SQL语句.
				</function>
	</prompt>
	<prompt>
		<name>USERENV</name>
		<grammar>USERENV(option)</grammar>
		<function>
			根据参数option,取得一个有关当前会话信息的VARCHAR2数值.
			使用位置:
			过程性语言和SQL语句.
				</function>
	</prompt>
	<prompt>
		<name>VSIZE</name>
		<grammar>VSIZE(value)</grammar>
		<function>
			获得value的内部表示的字节数.如果value是NULL,结果是NULL.
			使用位置:
			过程性语言和SQL语句.
				</function>
	</prompt>
</interfunction>


